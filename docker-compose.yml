version: '3.9'

services:
  db:
    image: postgres:16-alpine
    container_name: bees_bears_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_NAME:-bees_and_bears}
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - bees_bears_network

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: bees_bears_app
    restart: unless-stopped
    command: >
      sh -c "
        echo 'Waiting for database...' &&
        while ! pg_isready -h db -U ${DB_USER:-postgres} > /dev/null 2>&1; do sleep 1; done &&
        echo 'Database is ready!' &&
        python manage.py migrate &&
        python manage.py create_default_superuser &&
        gunicorn config.wsgi:application -c gunicorn_config.py
      "
    environment:
      - DEBUG=${DEBUG:-False}
      - SECRET_KEY=${SECRET_KEY}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS:-localhost,127.0.0.1}
      - DB_NAME=${DB_NAME:-bees_and_bears}
      - DB_USER=${DB_USER:-postgres}
      - DB_PASSWORD=${DB_PASSWORD:-postgres}
      - DB_HOST=db
      - DB_PORT=5432
      - GUNICORN_WORKERS=${GUNICORN_WORKERS:-4}
      - GUNICORN_WORKER_CONNECTIONS=${GUNICORN_WORKER_CONNECTIONS:-1000}
      - DJANGO_SUPERUSER_USERNAME=${DJANGO_SUPERUSER_USERNAME:-admin}
      - DJANGO_SUPERUSER_EMAIL=${DJANGO_SUPERUSER_EMAIL:-admin@example.com}
      - DJANGO_SUPERUSER_PASSWORD=${DJANGO_SUPERUSER_PASSWORD:-admin}
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - bees_bears_network

volumes:
  postgres_data:
    name: bees_bears_postgres_data
  static_volume:
    name: bees_bears_static

networks:
  bees_bears_network:
    name: bees_bears_network
    driver: bridge
